:root
{
  --control-input-border-radius                : var(--border-radius);
  --control-input-background-color             : #fff;
  --control-input-inner-box-shadow-hlen        : 1px;
  --control-input-inner-box-shadow-vlen        : 0;
  --control-input-inner-box-shadow-blur-radius : 0;
  --control-input-inner-box-spread-radius      : 0;
  --control-input-inner-box-shadow-color       : #f7f7f7;
  --control-input-outer-box-shadow-hlen        : 0;
  --control-input-outer-box-shadow-vlen        : 2px;
  --control-input-outer-box-shadow-blur-radius : 3px;
  --control-input-outer-box-spread-radius      : 0;
  --control-input-outer-box-shadow-color       : #f7f7f7;
}

.ui.input.control
{
  background : var(--control-input-background-color);
}

.ui.input.control
{
  border-radius : var(--control-input-border-radius);
  border        : var(--border-width) var(--border-style) var(--control-input-border-color);
  box-shadow    : var(--control-input-outer-box-shadow-hlen) var(--control-input-outer-box-shadow-vlen) var(--control-input-outer-box-shadow-blur-radius) var(--control-input-outer-box-spread-radius) var(--control-input-outer-box-shadow-color), inset var(--control-input-inner-box-shadow-hlen) var(--control-input-inner-box-shadow-vlen) var(--control-input-inner-box-shadow-blur-radius) var(--control-input-inner-box-spread-radius) var(--control-input-inner-box-shadow-color);

  & > input[type=number]::-webkit-inner-spin-button,
  & > input[type=number]::-webkit-outer-spin-button,
  & > input[type=date]::-webkit-inner-spin-button,
  & > input[type=date]::-webkit-outer-spin-button
  {
    -webkit-appearance : none;
    margin             : 0;
    -moz-appearance    : textfield;
  }

  & > *:not(.label)
  {
    border-radius : calc(var(--control-input-border-radius) - var(--border-width));
    color         : inherit;
  }

  & > input.--is-right
  {
    text-align : right;
  }

  & > input[type='number']::placeholder,
  & > input[type='text']::placeholder
  {
    content : "x";
  }

  &.--has-float-label
  {
    margin-top : calc((1.2em / 2) + .5rem);

    & > input,
    & > textarea
    {
      padding-bottom : .2rem;
      padding-top    : .2rem;
    }

    & > .label
    {
      position       : absolute;
      /* reset default margin */
      font-size      : 75%;
      opacity        : 1;
      cursor         : text;
      margin         : calc(-1 * (.5em + .1em + var(--control-input-border-width))) 0 0;
      left           : 0;
      max-width      : 100%;
      flex           : 1 1 auto;
      width          : auto;
      padding        : 0 calc(.1em + var(--control-input-border-width) + var(--control-input-outline-width-active));
      z-index        : calc(var(--zindex-glass-layer) + 1);
      height         : 1.3em;
      pointer-events : none;

      &:after
      {
        content    : " ";
        display    : block;
        position   : absolute;
        background : var(--control-input-background-color);
        height     : calc(var(--control-input-border-width) * 2);
        left       : 0;
        right      : 0;
        top        : 50%;
        z-index    : -1;
        margin     : -1px .25em 0;
      }
    }

    & > input:placeholder-shown:not(:focus)::placeholder,
    & > textarea:placeholder-shown:not(:focus)::placeholder
    {
      opacity : 0;
    }

    &:focus-within > .label:after
    {
      box-shadow : 0 0 0 var(--control-input-outline-width-active) var(--control-input-background-color);
      margin     : 0 calc(.25em + var(--control-input-border-width) + var(--control-input-outline-width-active));
    }

    & > input:placeholder-shown:not(:focus) ~ .label
    {
      font-size   : 100%;
      top         : .2rem;
      opacity     : .5;
      line-height : inherit;
    }
  }

  &:focus-within > .prepend
  {
    border-top-left-radius    : calc(var(--control-focus-ring-border-radius) - var(--control-input-border-width));
    border-bottom-left-radius : calc(var(--control-focus-ring-border-radius) - var(--control-input-border-width));
  }

  &:focus-within > .append
  {
    border-radius              : 0;
    border-top-right-radius    : calc(var(--control-focus-ring-border-radius) - var(--control-input-border-width));
    border-bottom-right-radius : calc(var(--control-focus-ring-border-radius) - var(--control-input-border-width));
  }

  & > .prepend,
  & > .ui.control.prepend
  {
    white-space               : nowrap;
    border-right              : var(--control-input-border-width) solid var(--control-input-border-color);
    border-top-left-radius    : calc(var(--control-input-border-radius) - var(--control-input-border-width));
    border-bottom-left-radius : calc(var(--control-input-border-radius) - var(--control-input-border-width));
    border-color              : var(--control-input-border-color);
    align-self                : stretch;
  }

  & > .ui.control.prepend > *
  {
  }

  & > .append,
  & > .ui.control.append
  {
    white-space                : nowrap;
    /* height calculation should be the same as input */
    margin                     : calc((var(--control-input-border-width) + var(--control-input-inner-box-shadow-vlen) + var(--control-input-inner-box-spread-radius)) * -1); /* negative repositioning border and box-shadow */

    border                     : inherit;
    border-color               : transparent;
    border-left                : var(--control-input-border-width) solid var(--control-input-border-color);
    border-top-right-radius    : calc(var(--control-input-border-radius) - var(--control-input-border-width));
    border-bottom-right-radius : calc(var(--control-input-border-radius) - var(--control-input-border-width));
    align-self                 : stretch;
    appearance                 : none;
    outline                    : none;
    background                 : none;
  }
}