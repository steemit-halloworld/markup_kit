/*doc

# Control

Controls are visual elements that convey a specific action or intention in response to user interactions. They are
essential for collecting and handling user input and should follow styling and interaction guidelines for each
platform, so that they are intuitive for users to interact with.

The `ui control` is a container for:

* `.label` - an optional short word or phrase that succinctly describes the control
* `input`, `select`, `textarea` or `button` - the associated HTML form element
* `.hint` - an optional brief phrase that describe the control in more detail

*/

:root
{
  --control-margin-top                 : 5px;
  --control-margin-bottom              : 5px;
  --control-input-border-color-active  : var(--color-focus);
  --control-input-border-width         : var(--border-width);
  --control-input-border-color         : var(--border-color);
  --control-input-outline-color-active : var(--color-focus);
  --control-focus-ring-border-radius   : inherit;
  --control-input-outline-width-active : 1px;
  --control-label-color                : dimgrey;
  --control-input-box-shadow-active    : 0px 0px 0px var(--control-input-outline-width-active) var(--control-input-outline-color-active);
}

.ui.control
{ display : inline-flex;}

div.ui.control
{ display : flex; }

.ui.control
{
  flex-wrap       : wrap;
  vertical-align  : baseline;
  align-items     : baseline;
  position        : relative;
  font-size       : 1em;
  font-family     : inherit;
  line-height     : 1.5;
  background      : #e8e8e8;
  padding         : 0;
  justify-content : space-between;
  outline         : none;
  appearance      : none;

  &:not(.group):not(.checkbox)
  {
    margin : calc(1em + 4px + var(--control-margin-top)) 0 var(--control-margin-bottom);

    &.--is-horizontal
    {
      margin-left : 10em;
    }
  }

  /*& + .ui.control:not(.group):not(.checkbox)
  {
    margin : calc(1em + 4px + 2 * var(--control-margin-top)) 0 var(--control-margin-bottom);
  }*/

  &.--is-disabled
  {
    opacity : 0.66;
  }

  &.--is-disabled > input,
  &.--is-disabled,
  &:not(.--is-disabled) > input[disabled],
  &:not(.--is-disabled) > select[disabled]
  {
    pointer-events : none;
  }

  &.--is-expanded
  {
    display : flex;
  }

  &.--has-no-label
  {
    margin-top : var(--control-margin-top);

    & > .label
    {
      display : none;
    }
  }

  & + .ui.control.--has-no-label
  {
    margin-top : var(--control-margin-top);
  }

  & > *:not(.control)
  {
    padding-left  : .35em;
    padding-right : .35em;
  }

  & > *
  {
    text-align     : left;
    vertical-align : inherit;
    font-family    : inherit;
    font-size      : inherit;
    line-height    : inherit;
  }

  &:not(.group) > *:not(.label)
  {
    padding-top    : .2rem;
    padding-bottom : .2rem;
  }

  & > *:not(:first-child):not(:last-child)
  {
    border-radius : 0;
  }

  & > input, & > textarea, & > select
  {appearance : none;}

  & > input:not([type='checkbox']):not([type='radio']),
  & textarea
  {
  }

  & > input:not([type='checkbox']):not([type='radio']),
  & > textarea, & > select
  {
    border       : inherit;
    outline      : none;
    background   : transparent;
    flex         : 1 1 auto;
    align-self   : stretch;
    border-color : transparent;
    margin       : calc((var(--control-input-border-width) + var(--control-input-inner-box-shadow-vlen) + var(--control-input-inner-box-spread-radius)) * -1); /* negative repositioning border and box-shadow */

  }

  /* control contains another control */
  &:not(.group) > .ui.control
  {
    margin        : calc((var(--control-input-border-width) + var(--control-input-inner-box-shadow-vlen) + var(--control-input-inner-box-spread-radius)) * -1); /* negative repositioning border and box-shadow */
    border        : none;
    border-radius : 0;
    align-self    : stretch;
    flex          : 1 1 0;
    background    : transparent;
    /*& > *
    {
      background    : transparent;
      border        : none;
      border-radius : 0;
    }*/
  }

  & > .label, & > input
  {
    flex : 1 1 0;
  }

  &.radio,
  &.checkbox
  {
    padding-left : 1.5rem;
    display      : inline-block;

    & > .control-indicator
    {
      position            : absolute;
      padding             : 0;
      margin              : 0;
      top                 : .25rem;
      left                : 0;
      display             : block;
      width               : 1rem;
      height              : 1rem;
      line-height         : 1rem;
      font-size           : 65%;
      color               : #eee;
      text-align          : center;
      background-color    : #eee;
      background-size     : 50% 50%;
      background-position : center center;
      background-repeat   : no-repeat;
      user-select         : none;
    }

    & > input:focus ~ .control-indicator
    {
      box-shadow : 0 0 0 .075rem #fff, 0 0 0 .1rem #0074d9;
    }

    & > input:checked ~ .control-indicator
    {
      color            : #fff;
      background-color : var(--color-focus);
    }

    & > input:active ~ .control-indicator
    {
      color            : #fff;
      background-color : #84c6ff;
    }
  }

  & > .label
  {
    text-overflow : ellipsis;
    white-space   : nowrap;
    overflow      : hidden;
    align-self    : flex-start;
    font-size     : 1em;
    line-height   : 1.2;
    //height        : 1.2em;
    display       : block;
    order         : -1000;
    flex          : 1 1 100%;
    margin-top    : calc(-1.2em - 4px);
    margin-bottom : 4px;
    padding-left  : .2rem;
    color         : var(--control-label-color);
  }

  /*&:not(.--is-horizontal) > .label
  {
    position : absolute;
    left: 0;
    right: 0;
  }*/

  &.--is-horizontal
  {
    margin-left : 10em;
    margin-top  : auto;

    & > .label
    {
      margin-top    : auto;
      margin-bottom : auto;
      flex          : 1 0 0;
      max-width     : 10em;
      min-width     : 10em;
      margin-left   : -10em;
      top           : 0;
      bottom        : 0;
    }
  }

  &.--is-start-aligned
  {
    margin-top    : auto;
    margin-bottom : calc(1.2em + 16px);

    & > .label
    {
      /*top           : auto;*/
      margin-top    : 8px;
      margin-bottom : calc(-1.2em - 8px);
      order         : 1000;
    }
  }

  &.input, &.select
  {
    &:focus-within
    {
      border-color  : var(--control-input-border-color-active);
      border-radius : var(--control-focus-ring-border-radius);
      box-shadow    : var(--control-input-box-shadow-active);
      transition    : opacity .2s;
    }

    &:focus-within > :focus
    {
      box-shadow   : none;
      border       : inherit;
      border-color : transparent;
    }

    &:focus-within .ui.control,
    &:focus-within .ui.control > :focus
    {
      border     : none;
      box-shadow : none;
    }
  }

  &.input
  {
    & > select
    {
      background : transparent;
    }
  }
}

@import 'control.input';
@import 'control.select';
@import 'control.radio';
@import 'control.checkbox';
@import 'control.group';

.ui.control.--has-error
{
  border-color : rgb(185, 74, 77);
  color        : rgb(185, 74, 77);
}



